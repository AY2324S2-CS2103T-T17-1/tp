@startuml
skinparam classAttributeIconSize 0
skinparam usecaseAttributeIconSize 0
skinparam classAttributeFontSize 0
skinparam usecaseAttributeFontSize 0

object UiManager {
+ start(): void
}

object MainWindow {
+ fillInnerparts(): void
- executeCommand(commandText: String): CommandResult
}

object LogicManager {
+ execute(commandText: String): CommandResult
}

object AddressBookParser {
+ parseCommand(userInput: String): Command
}

object FindTagCommandParser {
+ parse(args: String): FindTagCommand
}

object FindTagCommand {
+ execute(model: Model): CommandResult
}

object TagContainsKeywordsPredicate {
- keywords: List<String>
}

object CommandResult {
}

object CommandBox {
+ CommandBox(commandExecutor: CommandExecutor)
}

object ModelManager {
+ updateFilteredClientList(predicate: predicate<Client>): void
+ getFilteredClientList(): ObservableList<Client>
}

UiManager .> MainWindow : creates >
MainWindow -> LogicManager
MainWindow ..> CommandBox : creates >
LogicManager ..> AddressBookParser : creates >
LogicManager --> ModelManager
AddressBookParser ..> FindTagCommandParser : creates >
FindTagCommand <. FindTagCommandParser : creates <
CommandResult <. FindTagCommand : creates <
FindTagCommand --> TagContainsKeywordsPredicate
FindTagCommand ..> ModelManager : updates client list >
TagContainsKeywordsPredicate <. ModelManager
LogicManager ..> FindTagCommand : executes >
CommandBox <.. CommandResult : is used to create <
@enduml
