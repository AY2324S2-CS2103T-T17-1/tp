@startuml
skinparam classAttributeIconSize 0
skinparam usecaseAttributeIconSize 0
skinparam classAttributeFontSize 0
skinparam usecaseAttributeFontSize 0

object UiManager {
+ start(): void
}

object MainWindow {
+ fillInnerparts(): void
- executeCommand(commandText: String): CommandResult
}

object LogicManager {
+ execute(commandText: String): CommandResult
}

object AddressBookParser {
+ parseCommand(userInput: String): Command
}

object ViewCommandParser {
+ parse(args: String): ViewCommand
}

object ViewCommand {
+ execute(model: Model): CommandResult
}

object CommandResult {
}

object CommandBox {
+ CommandBox(commandExecutor: CommandExecutor)
}

object ModelManager {
+ getFilteredClientList(): ObservableList<Client>
}

UiManager .> MainWindow : creates >
MainWindow -> LogicManager
MainWindow ..> CommandBox : creates >
LogicManager ..> AddressBookParser : creates >
LogicManager --> ModelManager
AddressBookParser ..> ViewCommandParser : creates >
ViewCommand <. ViewCommandParser : creates <
CommandResult <. ViewCommand : creates <
ViewCommand ..> ModelManager: retrieves filtered list >
LogicManager ..> ViewCommand : executes >
CommandBox <.. CommandResult : is used to create <
@enduml
